name: Build and Release for macOS, Windows, and Linux

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter pub get
      - run: flutter build macos --release
      - run: mv build/macos/Build/Products/Release/*.app build/macos/Build/Products/Release/flow_apple_silicon.app
      - uses: actions/upload-artifact@v4
        with:
          name: macOS-build
          path: build/macos/Build/Products/Release/*.app/*

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter pub get
      - run: flutter build windows --release
      - run: mv build/windows/x64/runner/Release/*.exe build/windows/x64/runner/Release/flow_windows_x64.exe
      - uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: build/windows/x64/runner/Release/*.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - run: flutter pub get
      - run: flutter build linux --release
      - run: mv build/linux/x64/release/bundle/* build/linux/x64/release/bundle/flow_linux_x64
      - uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: build/linux/x64/release/bundle/*

  create-tag:
    needs: [build-macos, build-windows, build-linux]
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      - name: Create tag
        id: tag
        run: |
          TAG=v$(yq -r '.version' 'pubspec.yaml')
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "::set-output name=tag::$TAG"
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git tag $TAG
          git push origin $TAG

  release:
    needs: create-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Display structure of downloaded files
        run: ls -R
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            macOS-build/*.app/*
            windows-build/*.exe
            linux-build/*
          tag_name: ${{ needs.create-tag.outputs.tag_name }}
